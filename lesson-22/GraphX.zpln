{"id":"2JE6A9XGW","name":"GraphX","paragraphs":[{"text":"import org.apache.spark._\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD","user":"anonymous","dateUpdated":"Mar 27, 2024, 8:45:07 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark._\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_165316345","id":"paragraph_1661089034099_1688413289","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 8:45:07 PM","dateFinished":"Mar 27, 2024, 8:45:07 PM","status":"FINISHED"},{"text":"%md\n# Создаём граф","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:30:43 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Создаём граф</h1>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1863659792","id":"paragraph_1661089077847_1035871494","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:30:43 AM","dateFinished":"Oct 23, 2023, 11:30:43 AM","status":"FINISHED"},{"text":"// Create an RDD for the vertices\nval users: RDD[(VertexId, (String, String))] =\n  sc.parallelize(Seq((3L, (\"rxin\", \"student\")), (7L, (\"jgonzal\", \"postdoc\")),\n                       (5L, (\"franklin\", \"prof\")), (2L, (\"istoica\", \"prof\")),\n                       (4L, (\"peter\", \"student\"))))\n\n// Create an RDD for edges\nval relationships: RDD[Edge[String]] =\n  sc.parallelize(Seq(Edge(3L, 7L, \"collab\"),    Edge(5L, 3L, \"advisor\"),\n                       Edge(2L, 5L, \"colleague\"), Edge(5L, 7L, \"pi\"),\n                       Edge(4L, 0L, \"student\"),   Edge(5L, 0L, \"colleague\")))\n\n// Define a default user in case there are relationship with missing user\nval defaultUser = (\"John Doe\", \"Missing\")\n\n// Build the initial Graph\nval graph = Graph(users, relationships, defaultUser)\n","user":"anonymous","dateUpdated":"Mar 27, 2024, 8:46:12 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34musers\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (String, String))]\u001b[0m = ParallelCollectionRDD[2190] at parallelize at <console>:57\n\u001b[1m\u001b[34mrelationships\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[String]]\u001b[0m = ParallelCollectionRDD[2191] at parallelize at <console>:63\n\u001b[1m\u001b[34mdefaultUser\u001b[0m: \u001b[1m\u001b[32m(String, String)\u001b[0m = (John Doe,Missing)\n\u001b[1m\u001b[34mgraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[(String, String),String]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@6f1caa57\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_788784132","id":"paragraph_1661089000312_1153335561","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 8:46:12 PM","dateFinished":"Mar 27, 2024, 8:46:12 PM","status":"FINISHED"},{"text":"%md\n# Операции с графами","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:30:56 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Операции с графами</h1>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_548127301","id":"paragraph_1661089104109_1529879391","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:30:56 AM","dateFinished":"Oct 23, 2023, 11:30:56 AM","status":"FINISHED"},{"text":"%md\n## Information about the Graph","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:31:06 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Information about the Graph</h2>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1128420526","id":"paragraph_1661092107749_139776630","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:31:06 AM","dateFinished":"Oct 23, 2023, 11:31:06 AM","status":"FINISHED"},{"text":"println(s\"numEdges: ${graph.numEdges}\\nnumVertices: ${graph.numVertices}\")","user":"anonymous","dateUpdated":"Mar 27, 2024, 8:46:34 PM","progress":33,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numEdges: 6\nnumVertices: 6\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=161"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=162"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1735019272","id":"paragraph_1661153750748_1832840927","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 8:46:34 PM","dateFinished":"Mar 27, 2024, 8:46:35 PM","status":"FINISHED"},{"text":"graph.inDegrees.collect","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:39:38 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres19\u001b[0m: \u001b[1m\u001b[32mArray[(org.apache.spark.graphx.VertexId, Int)]\u001b[0m = Array((0,2), (3,1), (5,1), (7,2))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=78"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1162401642","id":"paragraph_1661153791820_1620163059","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:39:38 PM","dateFinished":"Mar 27, 2024, 1:39:38 PM","status":"FINISHED"},{"text":"graph.outDegrees.collect","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:39:46 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres20\u001b[0m: \u001b[1m\u001b[32mArray[(org.apache.spark.graphx.VertexId, Int)]\u001b[0m = Array((2,1), (3,1), (4,1), (5,3))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=79"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1132933983","id":"paragraph_1661153823499_757764137","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:39:46 PM","dateFinished":"Mar 27, 2024, 1:39:46 PM","status":"FINISHED"},{"text":"graph.degrees.collect","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:39:53 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres21\u001b[0m: \u001b[1m\u001b[32mArray[(org.apache.spark.graphx.VertexId, Int)]\u001b[0m = Array((0,2), (2,1), (3,2), (4,1), (5,4), (7,2))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=80"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1817312398","id":"paragraph_1661154005506_433036728","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:39:53 PM","dateFinished":"Mar 27, 2024, 1:39:53 PM","status":"FINISHED"},{"text":"%md\n## Views of the graph as collections","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:31:27 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Views of the graph as collections</h2>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_1239736124","id":"paragraph_1661154035250_1666550121","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:31:27 AM","dateFinished":"Oct 23, 2023, 11:31:27 AM","status":"FINISHED"},{"text":"graph.vertices.collect.foreach(println)","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:40:00 PM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(0,(John Doe,Missing))\n(2,(istoica,prof))\n(3,(rxin,student))\n(4,(peter,student))\n(5,(franklin,prof))\n(7,(jgonzal,postdoc))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=81"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534881_93812717","id":"paragraph_1661154063986_255624968","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:40:00 PM","dateFinished":"Mar 27, 2024, 1:40:00 PM","status":"FINISHED"},{"text":"graph.vertices.collect","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:40:08 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres23\u001b[0m: \u001b[1m\u001b[32mArray[(org.apache.spark.graphx.VertexId, (String, String))]\u001b[0m = Array((0,(John Doe,Missing)), (2,(istoica,prof)), (3,(rxin,student)), (4,(peter,student)), (5,(franklin,prof)), (7,(jgonzal,postdoc)))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=82"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698168986751_902731389","id":"paragraph_1698168986751_902731389","dateCreated":"Oct 24, 2023, 8:36:26 PM","dateStarted":"Mar 27, 2024, 1:40:08 PM","dateFinished":"Mar 27, 2024, 1:40:08 PM","status":"FINISHED"},{"text":"graph.edges.collect.foreach(println)","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:00 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Edge(3,7,collab)\nEdge(5,3,advisor)\nEdge(2,5,colleague)\nEdge(5,7,pi)\nEdge(4,0,student)\nEdge(5,0,colleague)\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=83"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_1037437671","id":"paragraph_1661154080251_172287776","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:45:00 PM","dateFinished":"Mar 27, 2024, 1:45:00 PM","status":"FINISHED"},{"text":"graph.edges.collect","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:09 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres25\u001b[0m: \u001b[1m\u001b[32mArray[org.apache.spark.graphx.Edge[String]]\u001b[0m = Array(Edge(3,7,collab), Edge(5,3,advisor), Edge(2,5,colleague), Edge(5,7,pi), Edge(4,0,student), Edge(5,0,colleague))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=84"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698169013810_894270470","id":"paragraph_1698169013810_894270470","dateCreated":"Oct 24, 2023, 8:36:53 PM","dateStarted":"Mar 27, 2024, 1:45:09 PM","dateFinished":"Mar 27, 2024, 1:45:09 PM","status":"FINISHED"},{"text":"graph.triplets.collect.foreach(println)","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:18 PM","progress":50,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"((3,(rxin,student)),(7,(jgonzal,postdoc)),collab)\n((5,(franklin,prof)),(3,(rxin,student)),advisor)\n((2,(istoica,prof)),(5,(franklin,prof)),colleague)\n((5,(franklin,prof)),(7,(jgonzal,postdoc)),pi)\n((4,(peter,student)),(0,(John Doe,Missing)),student)\n((5,(franklin,prof)),(0,(John Doe,Missing)),colleague)\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=85"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_152342220","id":"paragraph_1661154138444_1743203584","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:45:18 PM","dateFinished":"Mar 27, 2024, 1:45:18 PM","status":"FINISHED"},{"text":"graph.triplets.collect","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:26 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres27\u001b[0m: \u001b[1m\u001b[32mArray[org.apache.spark.graphx.EdgeTriplet[(String, String),String]]\u001b[0m = Array(((3,(rxin,student)),(7,(jgonzal,postdoc)),collab), ((5,(franklin,prof)),(3,(rxin,student)),advisor), ((2,(istoica,prof)),(5,(franklin,prof)),colleague), ((5,(franklin,prof)),(7,(jgonzal,postdoc)),pi), ((4,(peter,student)),(0,(John Doe,Missing)),student), ((5,(franklin,prof)),(0,(John Doe,Missing)),colleague))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=86"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698169079012_1769155716","id":"paragraph_1698169079012_1769155716","dateCreated":"Oct 24, 2023, 8:37:59 PM","dateStarted":"Mar 27, 2024, 1:45:26 PM","dateFinished":"Mar 27, 2024, 1:45:26 PM","status":"FINISHED"},{"text":"graph.triplets.map(\n  triplet => triplet.srcAttr._1 + \" is the \" + triplet.attr + \" of \" + triplet.dstAttr._1\n).collect.foreach(println(_))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:33 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rxin is the collab of jgonzal\nfranklin is the advisor of rxin\nistoica is the colleague of franklin\nfranklin is the pi of jgonzal\npeter is the student of John Doe\nfranklin is the colleague of John Doe\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=87"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_43770723","id":"paragraph_1661157013883_994163650","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:45:33 PM","dateFinished":"Mar 27, 2024, 1:45:34 PM","status":"FINISHED"},{"text":"%md\n## Structural Operators","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:32:06 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Structural Operators</h2>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_737934562","id":"paragraph_1661157355076_1337820703","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:32:06 AM","dateFinished":"Oct 23, 2023, 11:32:06 AM","status":"FINISHED"},{"text":"// Remove missing vertices as well as the edges to connected to them\nval validGraph = graph.subgraph(vpred = (id, attr) => attr._2 != \"Missing\")","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:42 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mvalidGraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[(String, String),String]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@5a2a2267\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_947796084","id":"paragraph_1661157260812_1888575754","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:45:42 PM","dateFinished":"Mar 27, 2024, 1:45:42 PM","status":"FINISHED"},{"text":"// The valid subgraph will disconnect users 4 and 5 by removing user 0\nvalidGraph.vertices.collect.foreach(println(_))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:49 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(2,(istoica,prof))\n(3,(rxin,student))\n(4,(peter,student))\n(5,(franklin,prof))\n(7,(jgonzal,postdoc))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=88"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_196173616","id":"paragraph_1661157426813_1321542112","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:45:49 PM","dateFinished":"Mar 27, 2024, 1:45:49 PM","status":"FINISHED"},{"text":"validGraph.triplets.map(\n  triplet => triplet.srcAttr._1 + \" is the \" + triplet.attr + \" of \" + triplet.dstAttr._1\n).collect.foreach(println(_))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:45:57 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rxin is the collab of jgonzal\nfranklin is the advisor of rxin\nistoica is the colleague of franklin\nfranklin is the pi of jgonzal\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=89"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_828870952","id":"paragraph_1661157486516_1735064739","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:45:57 PM","dateFinished":"Mar 27, 2024, 1:45:57 PM","status":"FINISHED"},{"text":"import org.apache.spark.graphx.EdgeDirection._\n\ngraph.collectNeighborIds(In).collect()","user":"anonymous","dateUpdated":"Mar 27, 2024, 8:59:02 PM","progress":0,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.graphx.EdgeDirection._\n\u001b[1m\u001b[34mres44\u001b[0m: \u001b[1m\u001b[32mArray[(org.apache.spark.graphx.VertexId, Array[org.apache.spark.graphx.VertexId])]\u001b[0m = Array((0,Array(4, 5)), (2,Array()), (3,Array(5)), (4,Array()), (5,Array(2)), (7,Array(3, 5)))\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=163"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1711562176300_1969296210","id":"paragraph_1711562176300_1969296210","dateCreated":"Mar 27, 2024, 8:56:16 PM","dateStarted":"Mar 27, 2024, 8:59:02 PM","dateFinished":"Mar 27, 2024, 8:59:03 PM","status":"FINISHED"},{"text":"%md\n# Graph Algorithms","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:32:26 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Graph Algorithms</h1>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_2012121129","id":"paragraph_1661162420058_877127757","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:32:26 AM","dateFinished":"Oct 23, 2023, 11:32:26 AM","status":"FINISHED"},{"text":"%md\n## PageRank\n\nGraphX also includes an example social network dataset that we can run PageRank on. A set of users is given in ``data/graphx/users.txt``, and a set of relationships between users is given in ``data/graphx/followers.txt``. We compute the PageRank of each user as follows:","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:32:36 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>PageRank</h2>\n<p>GraphX also includes an example social network dataset that we can run PageRank on. A set of users is given in <code>data/graphx/users.txt</code>, and a set of relationships between users is given in <code>data/graphx/followers.txt</code>. We compute the PageRank of each user as follows:</p>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_1489737344","id":"paragraph_1661162466003_1953830269","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:32:36 AM","dateFinished":"Oct 23, 2023, 11:32:36 AM","status":"FINISHED"},{"text":"import org.apache.spark.graphx.GraphLoader\n\n// Load the edges as a graph\nval graph = GraphLoader.edgeListFile(sc, \"/opt/spark/data/graphx/followers.txt\")\n\n// Run PageRank\nval ranks = graph.pageRank(0.0001).vertices\n\n// Join the ranks with the usernames\nval users = sc.textFile(\"/opt/spark/data/graphx/users.txt\").map { line =>\n  val fields = line.split(\",\")\n  (fields(0).toLong, fields(1))\n}\nval ranksByUsername = users.join(ranks).map {\n  case (id, (username, rank)) => (username, rank)\n}\n\n// Print the result\nprintln(ranksByUsername.collect().mkString(\"\\n\"))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:46:06 PM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(justinbieber,0.15007622780470478)\n(matei_zaharia,0.7017164142469724)\n(ladygaga,1.3907556008752426)\n(BarackObama,1.4596227918476916)\n(jeresig,0.9998520559494657)\n(odersky,1.2979769092759237)\nimport org.apache.spark.graphx.GraphLoader\n\u001b[1m\u001b[34mgraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[Int,Int]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@5cf3f33c\n\u001b[1m\u001b[34mranks\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.VertexRDD[Double]\u001b[0m = VertexRDDImpl[1974] at RDD at VertexRDD.scala:57\n\u001b[1m\u001b[34musers\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(Long, String)]\u001b[0m = MapPartitionsRDD[1983] at map at <console>:50\n\u001b[1m\u001b[34mranksByUsername\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Double)]\u001b[0m = MapPartitionsRDD[1987] at map at <console>:54\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=90"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=91"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=92"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=93"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=94"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=95"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=96"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=97"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=98"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=99"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=100"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=101"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=102"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=103"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=104"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=105"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=106"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=107"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=108"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=109"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=110"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=111"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=112"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=113"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=114"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=115"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=116"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=117"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=118"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=119"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=120"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=121"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=122"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=123"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=124"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=125"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=126"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=127"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=128"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=129"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=130"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=131"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=132"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=133"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=134"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=135"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=136"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=137"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=138"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=139"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=140"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=141"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=142"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=143"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=144"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=145"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=146"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=147"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_521507208","id":"paragraph_1661162514278_566790536","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:46:06 PM","dateFinished":"Mar 27, 2024, 1:46:10 PM","status":"FINISHED"},{"text":"%md\n## Connected Components\n\nGraphX contains an implementation of the algorithm in the ConnectedComponents object, and we compute the connected components of the example social network dataset from the PageRank section as follows:","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:34:36 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Connected Components</h2>\n<p>GraphX contains an implementation of the algorithm in the ConnectedComponents object, and we compute the connected components of the example social network dataset from the PageRank section as follows:</p>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_743948356","id":"paragraph_1661162599261_1354922448","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:34:36 AM","dateFinished":"Oct 23, 2023, 11:34:36 AM","status":"FINISHED"},{"text":"import org.apache.spark.graphx.GraphLoader\n\n// Load the graph as in the PageRank example\nval graph = GraphLoader.edgeListFile(sc, \"/opt/spark/data/graphx/followers.txt\")\n\n// Find the connected components\nval cc = graph.connectedComponents().vertices\n\n// Join the connected components with the usernames\nval users = sc.textFile(\"/opt/spark/data/graphx/users.txt\").map { line =>\n  val fields = line.split(\",\")\n  (fields(0).toLong, fields(1))\n}\nval ccByUsername = users.join(cc).map {\n  case (id, (username, cc)) => (username, cc)\n}\n\n// Print the result\nprintln(ccByUsername.collect().mkString(\"\\n\"))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:46:20 PM","progress":40,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(justinbieber,1)\n(matei_zaharia,3)\n(ladygaga,1)\n(BarackObama,1)\n(jeresig,3)\n(odersky,3)\nimport org.apache.spark.graphx.GraphLoader\n\u001b[1m\u001b[34mgraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[Int,Int]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@68d1ca05\n\u001b[1m\u001b[34mcc\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.VertexRDD[org.apache.spark.graphx.VertexId]\u001b[0m = VertexRDDImpl[2020] at RDD at VertexRDD.scala:57\n\u001b[1m\u001b[34musers\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(Long, String)]\u001b[0m = MapPartitionsRDD[2037] at map at <console>:52\n\u001b[1m\u001b[34mccByUsername\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, org.apache.spark.graphx.VertexId)]\u001b[0m = MapPartitionsRDD[2041] at map at <console>:56\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=148"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=149"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=150"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=151"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=152"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_860752676","id":"paragraph_1661162598597_2125890841","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:46:20 PM","dateFinished":"Mar 27, 2024, 1:46:21 PM","status":"FINISHED"},{"text":"%md\n## Triangle Counting\n\nWe compute the triangle count of the social network dataset from the PageRank section. Note that TriangleCount requires the edges to be in canonical orientation (srcId < dstId) and the graph to be partitioned using Graph.partitionBy.","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:34:50 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Triangle Counting</h2>\n<p>We compute the triangle count of the social network dataset from the PageRank section. Note that TriangleCount requires the edges to be in canonical orientation (srcId &lt; dstId) and the graph to be partitioned using Graph.partitionBy.</p>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_251423089","id":"paragraph_1661162839887_23975299","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:34:50 AM","dateFinished":"Oct 23, 2023, 11:34:50 AM","status":"FINISHED"},{"text":"import org.apache.spark.graphx.{GraphLoader, PartitionStrategy}\n\n// Load the edges in canonical order and partition the graph for triangle count\nval graph = GraphLoader.edgeListFile(sc, \"/opt/spark/data/graphx/followers.txt\", true)\n  .partitionBy(PartitionStrategy.RandomVertexCut)\n  \n// Find the triangle count for each vertex\nval triCounts = graph.triangleCount().vertices\n\n// Join the triangle counts with the usernames\nval users = sc.textFile(\"/opt/spark/data/graphx/users.txt\").map { line =>\n  val fields = line.split(\",\")\n  (fields(0).toLong, fields(1))\n}\nval triCountByUsername = users.join(triCounts).map { case (id, (username, tc)) =>\n  (username, tc)\n}\n\n// Print the result\nprintln(triCountByUsername.collect().mkString(\"\\n\"))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:46:34 PM","progress":45,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(justinbieber,0)\n(matei_zaharia,1)\n(ladygaga,0)\n(BarackObama,0)\n(jeresig,1)\n(odersky,1)\nimport org.apache.spark.graphx.{GraphLoader, PartitionStrategy}\n\u001b[1m\u001b[34mgraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[Int,Int]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@65a24b81\n\u001b[1m\u001b[34mtriCounts\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.VertexRDD[Int]\u001b[0m = VertexRDDImpl[2111] at RDD at VertexRDD.scala:57\n\u001b[1m\u001b[34musers\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(Long, String)]\u001b[0m = MapPartitionsRDD[2116] at map at <console>:55\n\u001b[1m\u001b[34mtriCountByUsername\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Int)]\u001b[0m = MapPartitionsRDD[2120] at map at <console>:59\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=153"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=154"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534882_920323985","id":"paragraph_1661162838652_920036354","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:46:34 PM","dateFinished":"Mar 27, 2024, 1:46:35 PM","status":"FINISHED"},{"text":"%md\n# Pregel\n\nWe can use the Pregel operator to express computation such as single source shortest path in the following example.","user":"anonymous","dateUpdated":"Oct 23, 2023, 11:35:04 AM","progress":0,"config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Pregel</h1>\n<p>We can use the Pregel operator to express computation such as single source shortest path in the following example.</p>\n\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534883_1253087841","id":"paragraph_1661157586833_1170724323","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Oct 23, 2023, 11:35:04 AM","dateFinished":"Oct 23, 2023, 11:35:04 AM","status":"FINISHED"},{"text":"import org.apache.spark.graphx.{Graph, VertexId}\nimport org.apache.spark.graphx.util.GraphGenerators\n\n// A graph with edge attributes containing distances\nval graph: Graph[Long, Double] = GraphGenerators.logNormalGraph(sc, numVertices = 100).mapEdges(e => e.attr.toDouble)\n\nval sourceId: VertexId = 42 // The ultimate source\n\n// Initialize the graph such that all vertices except the root have distance infinity.\nval initialGraph = graph.mapVertices((id, _) => if (id == sourceId) 0.0 else Double.PositiveInfinity)\n\nval sssp = initialGraph.pregel(Double.PositiveInfinity)(\n  (id, dist, newDist) => math.min(dist, newDist), // Vertex Program\n  triplet => {  // Send Message\n    if (triplet.srcAttr + triplet.attr < triplet.dstAttr) {\n      Iterator((triplet.dstId, triplet.srcAttr + triplet.attr))\n    } else {\n      Iterator.empty\n    }\n  },\n  (a, b) => math.min(a, b) // Merge Message\n)\n\nprintln(sssp.vertices.collect.mkString(\"\\n\"))","user":"anonymous","dateUpdated":"Mar 27, 2024, 1:47:25 PM","progress":24,"config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(96,2.0)\n(56,2.0)\n(16,1.0)\n(80,2.0)\n(48,1.0)\n(32,1.0)\n(0,2.0)\n(24,2.0)\n(64,2.0)\n(40,2.0)\n(72,2.0)\n(8,1.0)\n(88,2.0)\n(41,2.0)\n(81,2.0)\n(97,2.0)\n(25,2.0)\n(65,2.0)\n(73,1.0)\n(57,2.0)\n(33,2.0)\n(1,2.0)\n(89,2.0)\n(17,2.0)\n(9,1.0)\n(49,2.0)\n(34,2.0)\n(82,2.0)\n(66,2.0)\n(98,2.0)\n(50,2.0)\n(42,0.0)\n(74,2.0)\n(90,2.0)\n(18,2.0)\n(58,2.0)\n(26,2.0)\n(10,2.0)\n(2,2.0)\n(19,1.0)\n(59,1.0)\n(11,2.0)\n(35,2.0)\n(27,1.0)\n(75,2.0)\n(51,2.0)\n(83,2.0)\n(67,1.0)\n(3,2.0)\n(91,2.0)\n(43,2.0)\n(99,1.0)\n(84,1.0)\n(52,1.0)\n(4,1.0)\n(76,1.0)\n(28,2.0)\n(36,1.0)\n(92,2.0)\n(20,2.0)\n(12,2.0)\n(60,1.0)\n(44,2.0)\n(68,2.0)\n(13,2.0)\n(61,2.0)\n(21,2.0)\n(77,2.0)\n(53,2.0)\n(29,1.0)\n(93,2.0)\n(37,1.0)\n(45,2.0)\n(69,1.0)\n(85,2.0)\n(5,2.0)\n(22,2.0)\n(54,2.0)\n(46,2.0)\n(30,2.0)\n(14,2.0)\n(62,1.0)\n(6,2.0)\n(70,1.0)\n(38,2.0)\n(86,2.0)\n(78,1.0)\n(94,1.0)\n(39,2.0)\n(15,2.0)\n(47,2.0)\n(71,2.0)\n(55,2.0)\n(95,2.0)\n(79,2.0)\n(23,2.0)\n(63,2.0)\n(7,1.0)\n(31,2.0)\n(87,1.0)\nimport org.apache.spark.graphx.{Graph, VertexId}\nimport org.apache.spark.graphx.util.GraphGenerators\n\u001b[1m\u001b[34mgraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[Long,Double]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@3f74e98a\n\u001b[1m\u001b[34msourceId\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.VertexId\u001b[0m = 42\n\u001b[1m\u001b[34minitialGraph\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[Double,Double]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@2cecb05c\n\u001b[1m\u001b[34msssp\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.graphx.Graph[Double,Double]\u001b[0m = org.apache.spark.graphx.impl.GraphImpl@25ccc94b\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ubuntu:4040/jobs/job?id=155"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=156"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=157"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=158"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=159"},{"jobUrl":"http://ubuntu:4040/jobs/job?id=160"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1698046534883_1088218896","id":"paragraph_1661157632824_1893787653","dateCreated":"Oct 23, 2023, 10:35:34 AM","dateStarted":"Mar 27, 2024, 1:47:25 PM","dateFinished":"Mar 27, 2024, 1:47:26 PM","status":"FINISHED"}],"info":{},"noteForms":{},"noteParams":{},"angularObjects":{}}